//List convertions
using System;
using System.Collections.Generic; // For list
using System.Linq; // for tolist,todictionary
public class Program
    {
    static void Main(string[] args)
    {
        Customer Customer1 = new Customer()
        {id=1, name="kumar", age=27, salary=25000,type="Active Customer"};
        Customer Customer2 = new Customer()
        { id =2, name = "rajesh", age = 26, salary = 35000, type = "Active Customer" };
        Customer Customer3 = new Customer()
        { id =3, name = "suresh", age = 23, salary = 55000, type = "Active Customer" };
        Customer Customer4 = new Customer()
        { id =4, name = "vinod", age = 29, salary = 45000, type = "Pending Customer" };
        Customer Customer5 = new Customer()
        { id =5, name = "murali", age = 28, salary = 60000, type = "Pending Customer" };

        List<Customer> Customers = new List<Customer>();
        Customers.Add(Customer1);
        Customers.Add(Customer2);
        Customers.Add(Customer3);

       
        List<Customer> PendingCustomers = new List<Customer>();
        PendingCustomers.Add(Customer4);
        PendingCustomers.Add(Customer5);

        ///(1)AddRange()- we can add list to another list 
        Customers.AddRange(PendingCustomers);

        /* foreach (Customer curcust in Customers)
       {
           Console.WriteLine("All Customers: id:{0}-name:{1}-age:{2},salary:{3}", curcust.id, curcust.name, curcust.age, curcust.salary,curcust.type);
       }
       */

        ///(2)GetRange()- we can get list from one position to onother position (count)
        // List<Customer> RangeCustomers =Customers.GetRange(0,5); // 0-starting pos ,5-total count  (for totla records)
        List<Customer> RangeCustomers =Customers.GetRange(1,3); // 1-starting pos ,3-total count 

        /*  foreach (Customer curcust in RangeCustomers)
      {
          Console.WriteLine("Range Customers: id:{0}-name:{1}-age:{2},salary:{3}", curcust.id, curcust.name, curcust.age, curcust.salary,curcust.type);
      } */


        ///(3)InsertRange()- we can insert data into top or middle by using index position 
        Customers.InsertRange(0,PendingCustomers); //PendingCustomers are inserted at index position 0

        ////(3)RemoveRange()- we can Remove data from one position to onother position 
        // Customers.RemoveRange(0, 3);  // remove 3 items from 0 position 
        // Customers.RemoveAt(3);   //remove 3 item at  3(index) position
        // Customers.RemoveAll(X => X.type == "PendingCustomers");  //remove item based on condition type=...
        //  Customers.Clear();     // remove all items in list "Customers"

        /* foreach (Customer curcust in Customers)
       {
           Console.WriteLine("All Customers: id:{0}-name:{1}-age:{2},salary:{3}", curcust.id, curcust.name, curcust.age, curcust.salary,curcust.type);
       }
       */

        /* foreach (Customer curcust in Customers)
        {
            Console.WriteLine("Active Customers: id:{0}-name:{1}-age:{2},salary:{3}", curcust.id, curcust.name, curcust.age, curcust.salary,curcust.type);
        }
        */
        /* foreach (Customer pencust in PendingCustomers)
         {
             Console.WriteLine("Pending Customers: id:{0}-name:{1}-age:{2},salary:{3}", pencust.id, pencust.name, pencust.age, pencust.salary,pencust.type);
         }
         */

    }


}

public class Customer
{
    public int id { get; set; }
    public string name { get; set; }
    public int age { get; set; }
    public int salary { get; set; }
    public string type { get; set; }
}
