//Dictionary
using System;
using System.Collections.Generic; // For list
class Program
    {
    static void Main(string[] args)
    {

        Customer Customer1 = new Customer()
        { id = 1, name = "kumar", age = 27, salary = 20000 };

        Customer Customer2 = new Customer()
        { id = 2, name = "suresh", age = 28, salary = 30000 };

        Customer Customer3 = new Customer()
        { id = 3, name = "rajesh", age = 26, salary = 50000 };

        /// Creating List
        /// List size increases Automatically. but array size is not increased it fixed size.
        // List<Customer> Customers = new List<Customer>(2); intial size we can add more possible
        List<Customer> Customers = new List<Customer>();   // "Customer" is complex type

        Customers.Add(Customer1);
        Customers.Add(Customer2);
        Customers.Add(Customer3);

        // Customers.Add(200); // compile error we can add same type only


        /// we can chane index position   
           Customers.Insert(0,Customer3); //  Customer3 is at in '0' and '3' position 

        /// we can find index position of Customer3  
        Console.WriteLine(Customers.IndexOf(Customer3)); //o/p: 0

        /// we can find  index position of Customer3 from 1 st postion
        Console.WriteLine(Customers.IndexOf(Customer3,1)); //o/p: 3

        /// we can find  index position of Customer3 from 1 st postion to n positions
        Console.WriteLine(Customers.IndexOf(Customer3, 1, 2)); //o/p: -1  (not found)

        Console.WriteLine(Customers.IndexOf(Customer3, 1, 3)); //o/p: 3

        // Console.WriteLine(Customers.IndexOf(Customer3, 1, 4)); //o/p: ArgumentOutOfRangeException


        ///(1) using foreach loop
        foreach (Customer cust in Customers) {
        Console.WriteLine("Customers{0} : id:{0},name:{1},age:{2}", cust.id,cust.name,cust.age);
           }
        /* o/p:
        Customers: id: 1,name: kumar,age: 27
        Customers: id: 2,name: suresh,age: 28
        Customers: id: 3,name: rajesh,age: 26 */

        ///(2) using for loop
        /// suppose count is excedded then we gat "ArgumentOutofRangeException" so  better use of foreach loop
        // for (int i = 0; i <= Customers.Count; i++) "ArgumentOutofRangeException" 
        for (int i = 0; i < Customers.Count; i++) 
        {
            Customer cusdata = Customers[i];
            Console.WriteLine("Customers{0} : id:{0},name:{1},age:{2}", cusdata.id, cusdata.name, cusdata.age);
        }


        /// we can add derived classes is also possible  (4)
        SubCustomer subcst = new SubCustomer();
           Customers.Add(subcst); /// its possible
        


    }
}

public class Customer
{
    public int    id    {get; set;}
    public string name  {get; set;}
    public int    age   {get; set;}
    public int    salary{get; set;}
}

public class SubCustomer: Customer  //(4)
{
   
}







